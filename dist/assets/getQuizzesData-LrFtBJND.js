import{U as z,C as A,F as g,V as y,W as u,ab as f,X as p,D as d,Y as w}from"./index-BLDXZsNf.js";const R=async e=>{const c=z(d,"assessments"),i=e==null?void 0:e.map(async s=>{const o=A(d,"courses",s),r=await g(o);return{...r.data(),id:r.id}}),a=await Promise.all(i),t=a==null?void 0:a.map(s=>s==null?void 0:s.assessments).flat();if(t!=null&&t.length){const s=y(c,u(f(),"in",t));return((await p(s)).docs.map(n=>({...n.data(),id:n.id}))??[]).slice().sort((n,m)=>{const l=n.createdAt.toDate(),D=m.createdAt.toDate();return l-D})}else return[]},B=async(e,c)=>{var o;if(!e||!c)throw new Error("Course ID or Program ID is missing");console.log(c);const i="https://api-engme.techfluxsolutions.com",a=sessionStorage.getItem("token"),t=sessionStorage.getItem("role"),s=await w.get(`${i}/${t}/assessment/${e}`,{headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"}});return(o=s==null?void 0:s.data)==null?void 0:o.data},$=async e=>{const c=z(d,"quizzes"),i=e==null?void 0:e.map(async s=>{const o=A(d,"courses",s),r=await g(o);return{...r.data(),id:r.id}}),a=await Promise.all(i),t=a==null?void 0:a.map(s=>s==null?void 0:s.quizzes).flat();if(console.log(t),t!=null&&t.length){const s=y(c,u(f(),"in",t));return((await p(s)).docs.map(n=>({...n.data(),id:n.id}))??[]).slice().sort((n,m)=>{const l=n.createdAt.toDate(),D=m.createdAt.toDate();return l-D})}else return[]};export{B as a,$ as b,R as g};
